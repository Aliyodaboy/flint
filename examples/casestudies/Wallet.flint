contract Wallet {
  var owner: Address
  var contents: Wei
}

Wallet :: caller <- (any) {
  public init() {
    owner = caller
    contents = Wei(0)
  }

  @payable
  public func deposit(implicit value: Wei)
    mutates (contents)
  {
    // Record the Wei received into the contents state property.
    contents.transfer(&value)
  }
}

Wallet :: (owner) {
  public func withdraw(value: Int)
    mutates (contents, owner)
  {
    // Transfer an amount of Wei into a local variable. This
    // removes Wei from the contents state property.
    var w: Wei = Wei(&contents, value)

    // Send Wei to the owner's Ethereum address.
    send(owner, &w)
  }

  public func getContents() -> Int {
    return contents.getRawValue()
  }
}
