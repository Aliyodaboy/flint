contract Wallet {
  var owner: Address
  var contents: Wei = Wei(0)
}

Wallet :: caller <- (any) {
  public init() {
    owner = caller
  }

  @payable
  public mutating func deposit(implicit value: Wei) {
    contents.transfer(&value)
  }
}

Wallet :: (owner) {
  public mutating func withdraw(value: Int) {
    if contents.getRawValue() >= value {
      var w: Wei = Wei(&contents, value)
      send(owner, &w)
    }
  }

  public func getContents() -> Int {
    return contents.getRawValue()
  }
}
