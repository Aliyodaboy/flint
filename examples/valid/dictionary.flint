contract Dictionary {
  var storage: [Address: Int] = [:]
  var foo: Int = 0
  var storage2: [Address: Int] = [:]
  var bar: Int = 0
}

Dictionary :: (any) {
  public init() {}

  public func write(addr: Address, value: Int)
    mutates (storage)
  {
    storage[addr] = value
  }

  public func get(addr: Address) -> Int {
    return storage[addr]
  }

  public func write2(addr: Address, value: Int)
    mutates (storage2)
  {
    storage2[addr] = value
  }

  public func get2(addr: Address) -> Int {
    return storage2[addr]
  }

  public func getFoo() -> Int {
    return foo
  }

  public func setFoo(val: Int)
    mutates (foo)
  {
    foo = val
  }

  public func getBar() -> Int {
    return bar
  }

  public func setBar(val: Int)
    mutates (bar)
  {
    bar = val
  }
}
