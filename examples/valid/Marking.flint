contract Marking {
  var lecturer: Address
  var markers: [Address]
  var numMarkers: Int = 0
  invariant(numMarkers == markers.size)

  var grades: [Address: Int]
}

Marking :: (any) {
  public init(lecturer: Address) {
    self.lecturer = lecturer
    self.markers = []
    self.grades = [:]
  }
}

Marking :: (lecturer) {
  public func addMarker(marker: Address)
    mutates (markers, numMarkers)
  {
    markers[numMarkers] = marker
    numMarkers += 1
  }
}

Marking :: (markers) {
  public func assignGrade(student: Address, grade: Int)
    mutates (grades)
  {
    grades[student] = grade
  }
}

Marking :: caller <- (any) {
  public func getGrade() -> Int {
    return grades[caller]
  }
}
