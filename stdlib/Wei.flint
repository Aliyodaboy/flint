struct Wei {
  var rawValue: Int

  //invariant (rawValue >= 0)

  init(unsafeRawValue: Int) {
    self.rawValue = unsafeRawValue
  }

  init(source: inout Wei, amount: Int) {
    if source.getRawValue() < amount {
      fatalError()
    }

    source.rawValue -= amount
    rawValue = amount
  }

  init(source: inout Wei) {
    let value: Int = source.getRawValue()
    source.rawValue -= value
    rawValue = value
  }

  func transfer(source: inout Wei, amount: Int)
    mutates(rawValue)
  {
    if source.getRawValue() < amount {
      fatalError()
    }

    source.rawValue -= amount
    rawValue += amount
  }

  func transfer(source: inout Wei)
    mutates(rawValue)
  {
    transfer(&source, source.getRawValue())
  }

  func getRawValue() -> Int {
    return rawValue
  }
}
