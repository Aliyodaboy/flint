// RUN: %flintc %s --verify --skip-verifier

struct trait Trait {
  func function () mutates (any)

  // NOT YET IMPLEMENTED (#21) mutating func notDefaulted(thisParam: inout Self)

  // Accept Self parameter
  func defaulted(thisParam: inout Self, anotherOne: inout Self) mutates (any) {
    // Variable declaration
    var this: Self = self
    // Variable assignment
    this = self
    // Function call to Self (trait)
    this.function()
    // Function self
    thisParam.function()
    anotherOne.function()
  }
}

// An implementation of struct trait Trait
struct Implementation: Trait {
  // Implementation of trait function calling defaulted function with self param
  func function() mutates (any) {
    defaulted(thisParam: &self, anotherOne: &self)
  }

  func comparison(thisParam: inout Implementation) mutates (any) {
    // Variable declaration
    var this: Implementation = self
    // Variable assignment
    this = self
    // Function call to Self (trait)
    this.function()
    // Function self
    thisParam.function()
  }
}

contract A { }

A :: a <- (any) {
  public init() {}
}
