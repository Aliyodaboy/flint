//VERIFY-CHECK
external trait Library {
  public func getValue() -> int256
  public func setValue(amount: int256) -> int256
}
contract C {
  var v: Int = 0
  var j: Int = 10
  invariant (j == 10)
}

C :: (any) {
  public init() {}

  public func test(extAddress: Address)
    mutates (v, j)
  {
    let libInstance: Library = Library(address: extAddress)
    do {
      self.v = (call libInstance.getValue()) as! Int
    do {
      self.v = (call libInstance.getValue()) as! Int
    } catch is ExternalCallError {
      j = 3
      fatalError()
    }
    } catch is ExternalCallError {
      j = 2
      fatalError()
    }
  }

  func violatedInvariant()
    mutates (j)
  {
    j = 5
    let libInstance: Library = Library(address: 0x1111111111111111111111111111111111111111)
    do {
      //VERIFY-FAIL
      (call libInstance.getValue()) as! Int
    } catch is ExternalCallError {
      fatalError()
    }
  }

  @payable
  func violatedAssetAccountingInvariant(implicit w: Wei)
    mutates (Wei.rawValue)
  {
    let libInstance: Library = Library(address: 0x1111111111111111111111111111111111111111)
    var w1: Wei = w
    w1 = Wei(0)
    do {
      //VERIFY-FAIL
      (call libInstance.getValue()) as! Int
    } catch is ExternalCallError {
      fatalError()
    }
  }
}
