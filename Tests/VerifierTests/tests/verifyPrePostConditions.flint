//VERIFY-CHECK
contract VerifyPrePostConditions {
  var ten: Int = 10

  invariant (10 == 10)
  invariant (ten == 10)
}

VerifyPrePostConditions :: (any) {
  public init() { }

  func testPreConditions()
    pre (1 == 1)
  {
    assert (4 > 2)
  }

  func testPostConditions()
    post(1 == 1)
  {
  }

  func testPrePostConditions()
    pre (2 == 2)
    post (1 == 1)
  {
  }

  func testParamsPreConditions(input: Int, increment: Int)
    pre (input == 10)
  {
    let input2: Int = input + increment
    assert (input2 == 10 + increment)
  }

  //VERIFY-WARNING
  func testGlobals()
    pre (ten == 5)
  {
    assert(ten != 10)
  }

  //VERIFY-WARNING
  func testInconsistentPre()
    pre (ten == 5)
  {
    // Pre condition contradicts what the invariant says
    assert(false)
  }

  func failPreCondition()
  {
    //VERIFY-FAIL
    testParamsPreConditions(input: 0, increment: 0)
  }

  //VERIFY-FAIL
  func failPostCondition()
    mutates(ten)
    post (ten == 10)
  {
    ten = 5
  }
}
