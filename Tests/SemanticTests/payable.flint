// RUN: %flintc %s --verify

contract Payable {}

Payable :: (any) {
  public init() {}

  @payable
  func foo() { // expected-error {{'foo' is declared @payable but doesn't have an implicit parameter of a currency type}}
  }

  @payable
  func bar(implicit parameter: Int) { // expected-error {{'bar' is declared @payable but doesn't have an implicit parameter of a currency type}}
  }

  @payable
  func baz(implicit parameter: Wei, implicit parameter2: Wei) { // expected-error {{Ambiguous implicit payable value parameter. Only one parameter can be declared implicit with a currency type}}
  }

  @payable
  func qux(implicit parameter: Int, implicit parameter2: Wei) { // expected-error {{Payable function 'qux' has an implicit parameter of non-currency type}}
  }

  @payable
  func payableImplicitCurrency(implicit parameter: Wei) {
  }

  func unpayableImplicitCurrency(implicit parameter: Wei) { // expected-error {{'unpayableImplicitCurrency' is not declared @payable but has an implicit parameter}}
  }

  func unpayableImplicitNonCurrency(implicit parameter: Int) { // expected-error {{'unpayableImplicitNonCurrency' is not declared @payable but has an implicit parameter}}
  }
}
