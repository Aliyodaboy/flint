// RUN: %flintc %s --verify

contract Test {
  var a: Address
  var b: [Address] = []
  var c: [Address: Int] = [] // expected-error {{Incompatible assignment between values of type [Address: Int] and [Any]}}
  var d: [Int] = [:] // expected-error {{Incompatible assignment between values of type [Int] and [Any: Any]}}
}

Test :: caller <- (any) {
  public init(a: Address) { // expected-note {{A public initializer is already declared here}}
    self.a = a
  }

  public init() { // expected-error {{A public initializer has already been defined}}
    self.a = caller
  }

  init() {
    self.a = caller
  }
}

Test :: (a) {
  public init(a: Address) { // expected-error {{Public contract initializer should be callable using caller capability "any"}}
    self.a = a
  }
}
