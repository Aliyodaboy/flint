// RUN: %flintc %s --verify

contract Test {
  var a: Int[10]
}

Test :: (any) {
  func foo() -> Int {
    a[0] = 2 // expected-error {{Use of mutating statement in a nonmutating function}}
    return a[0]
  }

  mutating func bar() { // expected-warning {{Function does not have to be declared mutating: none of its statements are mutating}}
    var a: Int = foo()
    a += foo()
  }

  func a() {
    b(c()) // expected-error {{Use of mutating statement in a nonmutating function}}
  }

  func b(a: Int) {
  }

  mutating func c() -> Int { // expected-warning {{Function does not have to be declared mutating: none of its statements are mutating}}
    return 0
  }

  mutating func d() {
    a[0] += 2
  }
}
