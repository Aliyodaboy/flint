// RUN: %flintc %s --verify

contract InvalidTypes {
  var int: Int
}

InvalidTypes :: (any) {
  func foo() -> Bool {
    return int // expected-error {{Cannot convert expression of type Int to expected return type Bool}}
  }

  func bar() {
    return 2 // expected-error {{Cannot convert expression of type Int to expected return type Void}}
  }

  func baz() {
    var a: Bool = true
    a = b // expected-error {{Use of undeclared identifier b}}
  }
}
