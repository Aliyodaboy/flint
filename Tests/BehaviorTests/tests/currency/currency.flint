contract C {
  var accounts: [Int: Coin] = [:]
}

C :: (any) {
  public init() {}

  public mutating func mint(index: Int, amount: Int) {
    accounts[index].value = amount
  }

  mutating public func transfer1(from: Int, to: Int, amount: Int) {
    let w: Coin = Coin(&accounts[from], amount)
    accounts[to].transfer(&w, amount)
  }

  mutating public func transfer2(from: Int, to: Int, amount: Int) {
    accounts[to].transfer(&accounts[from], amount)
  }

  public func get(index: Int) -> Int {
    return accounts[index].getValue()
  }
}
