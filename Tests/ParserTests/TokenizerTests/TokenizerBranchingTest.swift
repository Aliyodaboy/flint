//
//  TokenizerBranchingTest.swift
//  ParserTests
//
//  Created by Franklin Schrans on 12/25/17.
//

import XCTest
import Parser
import AST
import Diagnostic

class TokenizerBranchingTest: XCTestCase, TokenizerTest {
  var sourceCode: String =
  """
  contract Wallet {
    var owner: Address
    var contents: Ether
  }

  Wallet :: (any) {
    func factorial(n: Int) -> Int {
      if (n < 2) { return 0 }

      return n * factorial(n - 1)
    }

    func foo() {
      if true { print("error"); return; }
    }
  }
  """

  var expectedTokens: [Token] =
    [AST.Token(kind: AST.Token.Kind.contract, sourceLocation: SourceLocation(line: 1, column: 1, length: 8)), AST.Token(kind: AST.Token.Kind.identifier("Wallet"), sourceLocation: SourceLocation(line: 1, column: 10, length: 6)), AST.Token(kind: AST.Token.Kind.punctuation(AST.Token.Kind.Punctuation.openBrace), sourceLocation: SourceLocation(line: 1, column: 17, length: 1)), AST.Token(kind: AST.Token.Kind.newline, sourceLocation: SourceLocation(line: 1, column: 18, length: 1)), AST.Token(kind: AST.Token.Kind.var, sourceLocation: SourceLocation(line: 2, column: 3, length: 3)), AST.Token(kind: AST.Token.Kind.identifier("owner"), sourceLocation: SourceLocation(line: 2, column: 7, length: 5)), AST.Token(kind: AST.Token.Kind.punctuation(AST.Token.Kind.Punctuation.colon), sourceLocation: SourceLocation(line: 2, column: 12, length: 1)), AST.Token(kind: AST.Token.Kind.identifier("Address"), sourceLocation: SourceLocation(line: 2, column: 14, length: 7)), AST.Token(kind: AST.Token.Kind.newline, sourceLocation: SourceLocation(line: 2, column: 21, length: 1)), AST.Token(kind: AST.Token.Kind.var, sourceLocation: SourceLocation(line: 3, column: 3, length: 3)), AST.Token(kind: AST.Token.Kind.identifier("contents"), sourceLocation: SourceLocation(line: 3, column: 7, length: 8)), AST.Token(kind: AST.Token.Kind.punctuation(AST.Token.Kind.Punctuation.colon), sourceLocation: SourceLocation(line: 3, column: 15, length: 1)), AST.Token(kind: AST.Token.Kind.identifier("Ether"), sourceLocation: SourceLocation(line: 3, column: 17, length: 5)), AST.Token(kind: AST.Token.Kind.newline, sourceLocation: SourceLocation(line: 3, column: 22, length: 1)), AST.Token(kind: AST.Token.Kind.punctuation(AST.Token.Kind.Punctuation.closeBrace), sourceLocation: SourceLocation(line: 4, column: 1, length: 1)), AST.Token(kind: AST.Token.Kind.newline, sourceLocation: SourceLocation(line: 4, column: 2, length: 1)), AST.Token(kind: AST.Token.Kind.newline, sourceLocation: SourceLocation(line: 5, column: 1, length: 1)), AST.Token(kind: AST.Token.Kind.identifier("Wallet"), sourceLocation: SourceLocation(line: 6, column: 1, length: 6)), AST.Token(kind: AST.Token.Kind.punctuation(AST.Token.Kind.Punctuation.doubleColon), sourceLocation: SourceLocation(line: 6, column: 8, length: 1)), AST.Token(kind: AST.Token.Kind.punctuation(AST.Token.Kind.Punctuation.openBracket), sourceLocation: SourceLocation(line: 6, column: 10, length: 1)), AST.Token(kind: AST.Token.Kind.identifier("any"), sourceLocation: SourceLocation(line: 6, column: 11, length: 3)), AST.Token(kind: AST.Token.Kind.punctuation(AST.Token.Kind.Punctuation.closeBracket), sourceLocation: SourceLocation(line: 6, column: 14, length: 1)), AST.Token(kind: AST.Token.Kind.punctuation(AST.Token.Kind.Punctuation.openBrace), sourceLocation: SourceLocation(line: 6, column: 16, length: 1)), AST.Token(kind: AST.Token.Kind.newline, sourceLocation: SourceLocation(line: 6, column: 17, length: 1)), AST.Token(kind: AST.Token.Kind.func, sourceLocation: SourceLocation(line: 7, column: 3, length: 4)), AST.Token(kind: AST.Token.Kind.identifier("factorial"), sourceLocation: SourceLocation(line: 7, column: 8, length: 9)), AST.Token(kind: AST.Token.Kind.punctuation(AST.Token.Kind.Punctuation.openBracket), sourceLocation: SourceLocation(line: 7, column: 17, length: 1)), AST.Token(kind: AST.Token.Kind.identifier("n"), sourceLocation: SourceLocation(line: 7, column: 18, length: 1)), AST.Token(kind: AST.Token.Kind.punctuation(AST.Token.Kind.Punctuation.colon), sourceLocation: SourceLocation(line: 7, column: 19, length: 1)), AST.Token(kind: AST.Token.Kind.identifier("Int"), sourceLocation: SourceLocation(line: 7, column: 21, length: 3)), AST.Token(kind: AST.Token.Kind.punctuation(AST.Token.Kind.Punctuation.closeBracket), sourceLocation: SourceLocation(line: 7, column: 24, length: 1)), AST.Token(kind: AST.Token.Kind.punctuation(AST.Token.Kind.Punctuation.arrow), sourceLocation: SourceLocation(line: 7, column: 26, length: 1)), AST.Token(kind: AST.Token.Kind.identifier("Int"), sourceLocation: SourceLocation(line: 7, column: 28, length: 3)), AST.Token(kind: AST.Token.Kind.punctuation(AST.Token.Kind.Punctuation.openBrace), sourceLocation: SourceLocation(line: 7, column: 32, length: 1)), AST.Token(kind: AST.Token.Kind.newline, sourceLocation: SourceLocation(line: 7, column: 33, length: 1)), AST.Token(kind: AST.Token.Kind.if, sourceLocation: SourceLocation(line: 8, column: 5, length: 2)), AST.Token(kind: AST.Token.Kind.punctuation(AST.Token.Kind.Punctuation.openBracket), sourceLocation: SourceLocation(line: 8, column: 8, length: 1)), AST.Token(kind: AST.Token.Kind.identifier("n"), sourceLocation: SourceLocation(line: 8, column: 9, length: 1)), AST.Token(kind: AST.Token.Kind.binaryOperator(AST.Token.Kind.BinaryOperator.lessThan), sourceLocation: SourceLocation(line: 8, column: 11, length: 1)), AST.Token(kind: AST.Token.Kind.literal(AST.Token.Kind.Literal.decimal(AST.Token.Kind.DecimalLiteral.integer(2))), sourceLocation: SourceLocation(line: 8, column: 13, length: 1)), AST.Token(kind: AST.Token.Kind.punctuation(AST.Token.Kind.Punctuation.closeBracket), sourceLocation: SourceLocation(line: 8, column: 14, length: 1)), AST.Token(kind: AST.Token.Kind.punctuation(AST.Token.Kind.Punctuation.openBrace), sourceLocation: SourceLocation(line: 8, column: 16, length: 1)), AST.Token(kind: AST.Token.Kind.return, sourceLocation: SourceLocation(line: 8, column: 18, length: 6)), AST.Token(kind: AST.Token.Kind.literal(AST.Token.Kind.Literal.decimal(AST.Token.Kind.DecimalLiteral.integer(0))), sourceLocation: SourceLocation(line: 8, column: 25, length: 1)), AST.Token(kind: AST.Token.Kind.punctuation(AST.Token.Kind.Punctuation.closeBrace), sourceLocation: SourceLocation(line: 8, column: 27, length: 1)), AST.Token(kind: AST.Token.Kind.newline, sourceLocation: SourceLocation(line: 8, column: 28, length: 1)), AST.Token(kind: AST.Token.Kind.newline, sourceLocation: SourceLocation(line: 9, column: 1, length: 1)), AST.Token(kind: AST.Token.Kind.return, sourceLocation: SourceLocation(line: 10, column: 5, length: 6)), AST.Token(kind: AST.Token.Kind.identifier("n"), sourceLocation: SourceLocation(line: 10, column: 12, length: 1)), AST.Token(kind: AST.Token.Kind.binaryOperator(AST.Token.Kind.BinaryOperator.times), sourceLocation: SourceLocation(line: 10, column: 14, length: 1)), AST.Token(kind: AST.Token.Kind.identifier("factorial"), sourceLocation: SourceLocation(line: 10, column: 16, length: 9)), AST.Token(kind: AST.Token.Kind.punctuation(AST.Token.Kind.Punctuation.openBracket), sourceLocation: SourceLocation(line: 10, column: 25, length: 1)), AST.Token(kind: AST.Token.Kind.identifier("n"), sourceLocation: SourceLocation(line: 10, column: 26, length: 1)), AST.Token(kind: AST.Token.Kind.binaryOperator(AST.Token.Kind.BinaryOperator.minus), sourceLocation: SourceLocation(line: 10, column: 28, length: 1)), AST.Token(kind: AST.Token.Kind.literal(AST.Token.Kind.Literal.decimal(AST.Token.Kind.DecimalLiteral.integer(1))), sourceLocation: SourceLocation(line: 10, column: 30, length: 1)), AST.Token(kind: AST.Token.Kind.punctuation(AST.Token.Kind.Punctuation.closeBracket), sourceLocation: SourceLocation(line: 10, column: 31, length: 1)), AST.Token(kind: AST.Token.Kind.newline, sourceLocation: SourceLocation(line: 10, column: 32, length: 1)), AST.Token(kind: AST.Token.Kind.punctuation(AST.Token.Kind.Punctuation.closeBrace), sourceLocation: SourceLocation(line: 11, column: 3, length: 1)), AST.Token(kind: AST.Token.Kind.newline, sourceLocation: SourceLocation(line: 11, column: 4, length: 1)), AST.Token(kind: AST.Token.Kind.newline, sourceLocation: SourceLocation(line: 12, column: 1, length: 1)), AST.Token(kind: AST.Token.Kind.func, sourceLocation: SourceLocation(line: 13, column: 3, length: 4)), AST.Token(kind: AST.Token.Kind.identifier("foo"), sourceLocation: SourceLocation(line: 13, column: 8, length: 3)), AST.Token(kind: AST.Token.Kind.punctuation(AST.Token.Kind.Punctuation.openBracket), sourceLocation: SourceLocation(line: 13, column: 11, length: 1)), AST.Token(kind: AST.Token.Kind.punctuation(AST.Token.Kind.Punctuation.closeBracket), sourceLocation: SourceLocation(line: 13, column: 12, length: 1)), AST.Token(kind: AST.Token.Kind.punctuation(AST.Token.Kind.Punctuation.openBrace), sourceLocation: SourceLocation(line: 13, column: 14, length: 1)), AST.Token(kind: AST.Token.Kind.newline, sourceLocation: SourceLocation(line: 13, column: 15, length: 1)), AST.Token(kind: AST.Token.Kind.if, sourceLocation: SourceLocation(line: 14, column: 5, length: 2)), AST.Token(kind: AST.Token.Kind.literal(AST.Token.Kind.Literal.boolean(AST.Token.Kind.BooleanLiteral.true)), sourceLocation: SourceLocation(line: 14, column: 8, length: 4)), AST.Token(kind: AST.Token.Kind.punctuation(AST.Token.Kind.Punctuation.openBrace), sourceLocation: SourceLocation(line: 14, column: 13, length: 1)), AST.Token(kind: AST.Token.Kind.identifier("print"), sourceLocation: SourceLocation(line: 14, column: 15, length: 5)), AST.Token(kind: AST.Token.Kind.punctuation(AST.Token.Kind.Punctuation.openBracket), sourceLocation: SourceLocation(line: 14, column: 20, length: 1)), AST.Token(kind: AST.Token.Kind.literal(AST.Token.Kind.Literal.string("error")), sourceLocation: SourceLocation(line: 14, column: 21, length: 7)), AST.Token(kind: AST.Token.Kind.punctuation(AST.Token.Kind.Punctuation.closeBracket), sourceLocation: SourceLocation(line: 14, column: 28, length: 1)), AST.Token(kind: AST.Token.Kind.punctuation(AST.Token.Kind.Punctuation.semicolon), sourceLocation: SourceLocation(line: 14, column: 29, length: 1)), AST.Token(kind: AST.Token.Kind.return, sourceLocation: SourceLocation(line: 14, column: 31, length: 6)), AST.Token(kind: AST.Token.Kind.punctuation(AST.Token.Kind.Punctuation.semicolon), sourceLocation: SourceLocation(line: 14, column: 37, length: 1)), AST.Token(kind: AST.Token.Kind.punctuation(AST.Token.Kind.Punctuation.closeBrace), sourceLocation: SourceLocation(line: 14, column: 39, length: 1)), AST.Token(kind: AST.Token.Kind.newline, sourceLocation: SourceLocation(line: 14, column: 40, length: 1)), AST.Token(kind: AST.Token.Kind.punctuation(AST.Token.Kind.Punctuation.closeBrace), sourceLocation: SourceLocation(line: 15, column: 3, length: 1)), AST.Token(kind: AST.Token.Kind.newline, sourceLocation: SourceLocation(line: 15, column: 4, length: 1)), AST.Token(kind: AST.Token.Kind.punctuation(AST.Token.Kind.Punctuation.closeBrace), sourceLocation: SourceLocation(line: 16, column: 1, length: 1))]

  func testBranching() {
    test()
  }
}
